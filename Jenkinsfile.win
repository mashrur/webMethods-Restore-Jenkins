/*
* Copyright © 2010 - 2013 Apama Ltd.
* Copyright © 2013 - 2018 Software AG, Darmstadt, Germany and/or its licensors
*
* SPDX-License-Identifier: Apache-2.0
*
*   Licensed under the Apache License, Version 2.0 (the "License");
*   you may not use this file except in compliance with the License.
*   You may obtain a copy of the License at
*
*       http://www.apache.org/licenses/LICENSE-2.0
*
*   Unless required by applicable law or agreed to in writing, software
*   distributed under the License is distributed on an "AS IS" BASIS,
*   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*   See the License for the specific language governing permissions and
*   limitations under the License.                                                            
*
*/

pipeline {
    agent any 
    
    environment {
		// currentDir can be set to specific dir for non github testing 
		currentDir = "."
		artifactoryServerName = "admin-artifactory"
		fbrType = "artifactory"
		cmd = ""
		projectName = ''
                buildNumber = ''
	}
	
    stages {
        stage('Input') {
	   script {
                  def userInput = input(
                   id: 'userInput', message: 'Enter details for restoration',
                   parameters: [
                   string(defaultValue: 'test-with-artifactory',
                   description: 'Artifactory project name',
                   name: 'projname'),
		   string(defaultValue: '26',
                   description: 'Build number',
                   name: 'buildnum'),
                   ])
                  projectName = userInput.projname
		  buildNumber = userInput.buildnum
		  cmd = "${env.SAG_HOME}/common/lib/ant/bin/ant -DSAGHome=${env.SAG_HOME} -DSAG_CI_HOME=${env.SAG_CI_HOME} -DprojectName=${projectName} -Dconfig.build.fbr.type=${fbrType}"
              }
              
	}
        stage('Restore') {
            steps {
                script {
				        artifactoryZipName = "${env.JOB_NAME}-${env.BUILD_NUMBER}.zip"
				        def downloadSpec = """{
                                         "files": [
                                            {
                                              "pattern": "libs-release-local/${projectName}/${buildNumber}/",
                                              "explode": "true"
                                            }
                                          ]
                                        }"""
					def server = Artifactory.server "${artifactoryServerName}"
					def buildInfo = Artifactory.newBuildInfo()
					buildInfo.env.capture = true
					buildInfo.env.collect()
					// Download from Artifactory.
					server.download spec: downloadSpec, buildInfo: buildInfo
				}
            }
        }
        stage('Deploy') {
            steps {
	        dir("${projectName}/${buildNumber}"){
            		bat "${cmd} deploy"
          	}		
            }
        }
 	stage('Test') {
            steps {
	        dir("${projectName}/${buildNumber}"){
		     bat "${cmd} test"
		     junit 'report/'
		}
            }
        }
    }
}
